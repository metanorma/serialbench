# Result Schema
# Defines the structure for benchmark result files (results/*/result.yml)

$schema: "http://json-schema.org/draft-07/schema#"
title: "Benchmark Result"
description: "Individual benchmark run result data"
type: object

required:
  - name
  - environment
  - benchmark_config
  - execution
  - results
  - metadata

properties:
  name:
    type: string
    description: "Unique name for this result"
    pattern: "^[a-zA-Z0-9_-]+$"
    minLength: 1
    maxLength: 100

  environment:
    type: object
    description: "Environment information where benchmark was executed"
    required:
      - name
      - type
      - ruby_version
      - platform
    properties:
      name:
        type: string
        description: "Environment name"
      type:
        type: string
        enum: ["docker", "asdf", "local"]
      ruby_version:
        type: string
        pattern: "^[0-9]+\\.[0-9]+\\.[0-9]+$"
      platform:
        type: string
        description: "Platform identifier (e.g., x86_64-linux, aarch64-darwin)"
      image_variant:
        type: string
        description: "Docker image variant (if applicable)"
      additional_info:
        type: object
        description: "Additional environment-specific information"
        additionalProperties: true

  benchmark_config:
    type: object
    description: "Benchmark configuration used"
    required:
      - file_path
      - formats
      - data_sizes
      - iterations
    properties:
      file_path:
        type: string
        description: "Path to benchmark configuration file"
      formats:
        type: array
        items:
          type: string
          enum: ["xml", "json", "yaml", "toml"]
        minItems: 1
      data_sizes:
        type: array
        items:
          type: string
          enum: ["small", "medium", "large"]
        minItems: 1
      iterations:
        type: integer
        minimum: 1
      warmup_iterations:
        type: integer
        minimum: 0
      memory_profiling:
        type: boolean
        default: false

  execution:
    type: object
    description: "Execution metadata"
    required:
      - started_at
      - completed_at
      - duration_seconds
      - status
    properties:
      started_at:
        type: string
        format: date-time
        description: "ISO 8601 timestamp when execution started"
      completed_at:
        type: string
        format: date-time
        description: "ISO 8601 timestamp when execution completed"
      duration_seconds:
        type: number
        minimum: 0
        description: "Total execution duration in seconds"
      status:
        type: string
        enum: ["success", "partial", "failed"]
      error_message:
        type: string
        description: "Error message if status is failed"
      warnings:
        type: array
        items:
          type: string
        description: "Warning messages during execution"

  results:
    type: object
    description: "Benchmark results organized by operation type"
    required:
      - parsing
      - generation
    properties:
      parsing:
        $ref: "#/definitions/OperationResults"
      generation:
        $ref: "#/definitions/OperationResults"
      streaming:
        $ref: "#/definitions/OperationResults"
      memory:
        $ref: "#/definitions/MemoryResults"

  metadata:
    type: object
    description: "Additional metadata"
    required:
      - serializer_versions
      - system_info
    properties:
      serializer_versions:
        type: object
        description: "Versions of serialization libraries used"
        additionalProperties:
          type: string
      system_info:
        type: object
        description: "System information"
        properties:
          cpu_count:
            type: integer
          memory_mb:
            type: integer
          os_name:
            type: string
          os_version:
            type: string
      notes:
        type: string
        description: "Additional notes about this result"

definitions:
  OperationResults:
    type: object
    description: "Results for a specific operation (parsing/generation/streaming)"
    patternProperties:
      "^(small|medium|large)$":
        type: object
        patternProperties:
          "^(xml|json|yaml|toml)$":
            type: object
            patternProperties:
              "^[a-zA-Z0-9_-]+$":  # serializer name
                type: object
                required:
                  - iterations_per_second
                  - time_per_iteration
                  - total_iterations
                properties:
                  iterations_per_second:
                    type: number
                    minimum: 0
                  time_per_iteration:
                    type: number
                    minimum: 0
                  total_iterations:
                    type: integer
                    minimum: 1
                  error:
                    type: string
                    description: "Error message if this serializer failed"
                  skipped:
                    type: boolean
                    description: "Whether this serializer was skipped"
                  skip_reason:
                    type: string
                    description: "Reason for skipping this serializer"

  MemoryResults:
    type: object
    description: "Memory profiling results"
    patternProperties:
      "^(small|medium|large)$":
        type: object
        patternProperties:
          "^(xml|json|yaml|toml)$":
            type: object
            patternProperties:
              "^[a-zA-Z0-9_-]+$":  # serializer name
                type: object
                required:
                  - total_allocated_mb
                  - total_retained_mb
                  - objects_allocated
                  - objects_retained
                properties:
                  total_allocated_mb:
                    type: number
                    minimum: 0
                  total_retained_mb:
                    type: number
                    minimum: 0
                  objects_allocated:
                    type: integer
                    minimum: 0
                  objects_retained:
                    type: integer
                    minimum: 0
                  gc_runs:
                    type: integer
                    minimum: 0
                  error:
                    type: string
                  skipped:
                    type: boolean
                  skip_reason:
                    type: string

examples:
  - name: "xml-perf-test"
    environment:
      name: "docker-ruby33"
      type: "docker"
      ruby_version: "3.3.8"
      platform: "x86_64-linux"
      image_variant: "slim"
    benchmark_config:
      file_path: "config/xml-only.yml"
      formats: ["xml"]
      data_sizes: ["small", "medium"]
      iterations: 100
      warmup_iterations: 10
      memory_profiling: false
    execution:
      started_at: "2024-01-15T10:30:00Z"
      completed_at: "2024-01-15T10:35:30Z"
      duration_seconds: 330.5
      status: "success"
      warnings: []
    results:
      parsing:
        small:
          xml:
            ox:
              iterations_per_second: 380343.2
              time_per_iteration: 0.00000263
              total_iterations: 100
            nokogiri:
              iterations_per_second: 45231.1
              time_per_iteration: 0.0000221
              total_iterations: 100
      generation:
        small:
          xml:
            ox:
              iterations_per_second: 285432.1
              time_per_iteration: 0.00000350
              total_iterations: 100
    metadata:
      serializer_versions:
        ox: "2.14.23"
        nokogiri: "1.18.8"
      system_info:
        cpu_count: 8
        memory_mb: 16384
        os_name: "Linux"
        os_version: "5.15.0"
