# ResultSet Schema
# Defines the structure for resultset files (resultsets/*/resultset.yml)

$schema: "http://json-schema.org/draft-07/schema#"
title: "Benchmark ResultSet"
description: "Collection of benchmark results for comparison and analysis"
type: object

required:
  - name
  - created_at
  - results
  - metadata

properties:
  name:
    type: string
    description: "Unique name for this resultset"
    pattern: "^[a-zA-Z0-9_-]+$"
    minLength: 1
    maxLength: 100

  description:
    type: string
    description: "Optional description of this resultset"

  created_at:
    type: string
    format: date-time
    description: "ISO 8601 timestamp when resultset was created"

  updated_at:
    type: string
    format: date-time
    description: "ISO 8601 timestamp when resultset was last updated"

  results:
    type: array
    description: "List of results included in this set"
    minItems: 1
    items:
      type: object
      required:
        - name
        - path
        - added_at
      properties:
        name:
          type: string
          description: "Name of the result"
        path:
          type: string
          description: "Path to the result directory"
        added_at:
          type: string
          format: date-time
          description: "When this result was added to the set"
        tags:
          type: array
          items:
            type: string
          description: "Optional tags for this result"
        notes:
          type: string
          description: "Optional notes about this result"

  comparison:
    type: object
    description: "Comparison configuration and metadata"
    properties:
      baseline:
        type: string
        description: "Name of the result to use as baseline for comparisons"
      grouping:
        type: string
        enum: ["environment", "format", "data_size", "serializer"]
        description: "How to group results for comparison"
        default: "environment"
      filters:
        type: object
        description: "Filters to apply when comparing results"
        properties:
          formats:
            type: array
            items:
              type: string
              enum: ["xml", "json", "yaml", "toml"]
          data_sizes:
            type: array
            items:
              type: string
              enum: ["small", "medium", "large"]
          serializers:
            type: array
            items:
              type: string
          operations:
            type: array
            items:
              type: string
              enum: ["parsing", "generation", "streaming"]

  aggregation:
    type: object
    description: "Aggregated statistics across all results"
    properties:
      total_results:
        type: integer
        minimum: 0
      environments:
        type: array
        items:
          type: string
        description: "List of unique environments in this set"
      formats:
        type: array
        items:
          type: string
        description: "List of formats tested across all results"
      serializers:
        type: array
        items:
          type: string
        description: "List of serializers tested across all results"
      date_range:
        type: object
        properties:
          earliest:
            type: string
            format: date-time
          latest:
            type: string
            format: date-time
      performance_summary:
        type: object
        description: "High-level performance summary"
        properties:
          fastest_serializer:
            type: object
            properties:
              name:
                type: string
              format:
                type: string
              operations_per_second:
                type: number
          slowest_serializer:
            type: object
            properties:
              name:
                type: string
              format:
                type: string
              operations_per_second:
                type: number
          memory_efficient:
            type: object
            properties:
              name:
                type: string
              format:
                type: string
              memory_mb:
                type: number

  metadata:
    type: object
    description: "Additional metadata about this resultset"
    properties:
      created_by:
        type: string
        description: "Who or what created this resultset"
      purpose:
        type: string
        description: "Purpose or goal of this comparison"
      tags:
        type: array
        items:
          type: string
        description: "Tags for categorizing this resultset"
      export_formats:
        type: array
        items:
          type: string
          enum: ["html", "json", "csv", "markdown"]
        description: "Formats this resultset has been exported to"
      site_config:
        type: object
        description: "Configuration for site generation"
        properties:
          template:
            type: string
            enum: ["comparison", "matrix", "timeline", "custom"]
            default: "comparison"
          theme:
            type: string
            default: "default"
          include_memory:
            type: boolean
            default: false
          include_charts:
            type: boolean
            default: true
          custom_css:
            type: string
            description: "Path to custom CSS file"

examples:
  - name: "ruby-version-comparison"
    description: "Comparing XML parsing performance across Ruby versions"
    created_at: "2024-01-15T10:30:00Z"
    updated_at: "2024-01-15T11:45:00Z"
    results:
      - name: "xml-test-ruby32"
        path: "results/xml-test-ruby32"
        added_at: "2024-01-15T10:30:00Z"
        tags: ["ruby-3.2", "xml"]
        notes: "Baseline Ruby 3.2 performance"
      - name: "xml-test-ruby33"
        path: "results/xml-test-ruby33"
        added_at: "2024-01-15T10:45:00Z"
        tags: ["ruby-3.3", "xml"]
        notes: "Ruby 3.3 with performance improvements"
    comparison:
      baseline: "xml-test-ruby32"
      grouping: "environment"
      filters:
        formats: ["xml"]
        operations: ["parsing", "generation"]
    aggregation:
      total_results: 2
      environments: ["docker-ruby32", "docker-ruby33"]
      formats: ["xml"]
      serializers: ["ox", "nokogiri", "rexml"]
      date_range:
        earliest: "2024-01-15T10:30:00Z"
        latest: "2024-01-15T10:45:00Z"
      performance_summary:
        fastest_serializer:
          name: "ox"
          format: "xml"
          operations_per_second: 380343.2
        slowest_serializer:
          name: "rexml"
          format: "xml"
          operations_per_second: 12543.1
    metadata:
      created_by: "serialbench-cli"
      purpose: "Evaluate Ruby 3.3 performance improvements for XML processing"
      tags: ["ruby-comparison", "xml", "performance"]
      export_formats: ["html", "json"]
      site_config:
        template: "comparison"
        theme: "default"
        include_memory: false
        include_charts: true
