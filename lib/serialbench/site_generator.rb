# frozen_string_literal: true

require 'fileutils'
require 'erb'
require 'json'
require_relative 'renderers/run_renderer'
require_relative 'renderers/runset_renderer'

module Serialbench
  # Site generator for creating static HTML sites from benchmark results
  class SiteGenerator
    attr_reader :source_path, :output_path, :config

    DEFAULT_CONFIG = {
      'theme' => 'default',
      'include_memory' => false,
      'include_charts' => true,
      'title' => 'Serialbench Results',
      'description' => 'Benchmark results generated by Serialbench'
    }.freeze

    def initialize(source_path, output_path = '_site', config = {})
      @source_path = File.expand_path(source_path)
      @output_path = File.expand_path(output_path)
      @config = DEFAULT_CONFIG.merge(config)
    end

    def self.generate_for_result(result_path, output_path = '_site', config = {})
      generator = new(result_path, output_path, config)
      generator.generate_result_site
    end

    def self.generate_for_resultset(resultset_path, output_path = '_site', config = {})
      generator = new(resultset_path, output_path, config)
      generator.generate_resultset_site
    end

    def generate_result_site
      validate_result_source!

      result = Models::Result.load_from_directory(@source_path)

      puts "🏗️  Generating HTML site for run: #{result.name}"
      puts "Source: #{@source_path}"
      puts "Output: #{@output_path}"

      prepare_output_directory

      # Use RunRenderer for individual results
      renderer = Renderers::RunRenderer.new
      renderer.render(result, @output_path)

      puts "✅ Site generated successfully at: #{@output_path}"
      @output_path
    end

    def generate_resultset_site
      validate_resultset_source!

      resultset = Models::ResultSet.load_from_directory(@source_path)

      puts "🏗️  Generating HTML site for runset: #{resultset.name}"
      puts "Source: #{@source_path}"
      puts "Output: #{@output_path}"

      prepare_output_directory

      # Use RunsetRenderer for runset comparisons
      renderer = Renderers::RunsetRenderer.new
      renderer.render(resultset, @output_path)

      puts "✅ Site generated successfully at: #{@output_path}"
      @output_path
    end

    private

    def validate_result_source!
      raise ArgumentError, "Source directory not found: #{@source_path}" unless Dir.exist?(@source_path)

      result_file = File.join(@source_path, 'result.yml')
      return if File.exist?(result_file)

      raise ArgumentError, "Result file not found: #{result_file}"
    end

    def validate_resultset_source!
      raise ArgumentError, "Source directory not found: #{@source_path}" unless Dir.exist?(@source_path)

      resultset_file = File.join(@source_path, 'resultset.yml')
      return if File.exist?(resultset_file)

      raise ArgumentError, "ResultSet file not found: #{resultset_file}"
    end

    def prepare_output_directory
      if Dir.exist?(@output_path)
        puts 'Cleaning existing output directory...'
        FileUtils.rm_rf(Dir.glob(File.join(@output_path, '*')))
      else
        FileUtils.mkdir_p(@output_path)
      end
    end
  end
end
