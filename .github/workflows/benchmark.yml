name: benchmark-weekly

on:
  push:
    branches: [main]
    paths-ignore:
      - '.github/workflows/windows-debug.yml'
  pull_request:
    paths-ignore:
      - '.github/workflows/windows-debug.yml'
  schedule:
    # Run benchmarks weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      ruby-versions: ${{ steps.set-matrix.outputs.ruby-versions }}
      platforms: ${{ steps.set-matrix.outputs.platforms }}
    steps:
      - name: Set matrix configurations
        id: set-matrix
        run: |
          echo 'ruby-versions=["3.1", "3.2", "3.3", "3.4"]' >> $GITHUB_OUTPUT
          echo 'platforms=["ubuntu-latest", "ubuntu-24.04-arm", "ubuntu-22.04-arm", "macos-13", "macos-15-intel", "macos-14", "macos-15", "windows-latest"]' >> $GITHUB_OUTPUT

  # Cross-platform native benchmarks
  benchmark:
    runs-on: ${{ matrix.platform }}
    needs: setup
    strategy:
      matrix:
        platform: ${{ fromJson(needs.setup.outputs.platforms) }}
        ruby-version: ${{ fromJson(needs.setup.outputs.ruby-versions) }}
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies (Windows)
        if: startsWith(matrix.platform, 'windows-')
        run: |
          vcpkg install libxml2:x64-windows 2>&1 || true
          vcpkg integrate install 2>&1 || true
          mkdir -p .bundle 2>&1 || true
          echo "---" > .bundle/config 2>&1 || true
          echo 'BUNDLE_BUILD__LIBXML___RUBY: "--with-xml2-dir=C:/vcpkg/installed/x64-windows --with-xml2-include=C:/vcpkg/installed/x64-windows/include/libxml2 --with-xml2-lib=C:/vcpkg/installed/x64-windows/lib"' >> .bundle/config 2>&1 || true
        shell: bash

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Install system dependencies (Ubuntu)
        if: startsWith(matrix.platform, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libxslt1-dev build-essential

      - name: Install system dependencies (macOS)
        if: startsWith(matrix.platform, 'macos-')
        run: |
          brew install libxml2 libxslt

      - name: Install gems
        run: bundle install

      - name: Update Ruby-Build cache
        run: bundle exec serialbench ruby-build update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create environment config
        run: |
          mkdir -p config/environments
          cat > config/environments/ci-ruby-${{ matrix.ruby-version }}.yml << EOF
          ---
          name: ci-ruby-${{ matrix.ruby-version }}-${{ matrix.platform }}
          kind: local
          created_at: '$(date -u +"%Y-%m-%dT%H:%M:%SZ")'
          ruby_build_tag: "${{ matrix.ruby-version }}"
          description: CI environment for Ruby ${{ matrix.ruby-version }} on ${{ matrix.platform }}
          EOF
        shell: bash

      - name: Run benchmarks
        env:
          GITHUB_RUNNER_PLATFORM: ${{ matrix.platform }}
        run: |
          bundle exec serialbench environment execute config/environments/ci-ruby-${{ matrix.ruby-version }}.yml config/benchmarks/short.yml results/runs/ci-ruby-${{ matrix.ruby-version }}-${{ matrix.platform }}

      - name: Verify benchmark results before upload
        run: |
          echo "=== Verifying benchmark results ==="
          RESULTS_FILE="results/runs/ci-ruby-${{ matrix.ruby-version }}-${{ matrix.platform }}/results.yaml"

          echo "📁 Checking file exists..."
          if [ ! -f "$RESULTS_FILE" ]; then
            echo "❌ ERROR: results.yaml not found at $RESULTS_FILE"
            exit 1
          fi

          echo "📊 Checking file size..."
          SIZE=$(wc -c < "$RESULTS_FILE" | tr -d ' ')
          echo "   File size: $SIZE bytes"

          if [ "$SIZE" -lt 1000 ]; then
            echo "❌ ERROR: results.yaml is suspiciously small ($SIZE bytes)"
            echo "   Expected at least 1000 bytes for valid benchmark results"
            echo "=== File contents ==="
            cat "$RESULTS_FILE"
            exit 1
          fi

          echo "✅ File size OK: $SIZE bytes"
        shell: bash

      - name: Validate YAML schema
        run: |
          bundle exec serialbench validate result results/runs/ci-ruby-${{ matrix.ruby-version }}-${{ matrix.platform }}/results.yaml

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ matrix.platform }}-ruby-${{ matrix.ruby-version }}
          path: results/runs/ci-ruby-${{ matrix.ruby-version }}-${{ matrix.platform }}
          retention-days: 30

  # Aggregate results and deploy to GitHub Pages
  deploy-pages:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [setup, benchmark]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libxslt1-dev build-essential

      - name: Install gems
        run: bundle install

      - name: Download all benchmark artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: benchmark-results-*
          path: artifacts/

      - name: List downloaded artifacts structure
        run: |
          echo "=== Artifacts directory structure ==="
          ls -la artifacts/
          echo ""
          echo "=== Searching for results.yaml files ==="
          find artifacts/ -name "results.yaml" -type f
          echo ""
          echo "=== Directory tree (first 3 levels) ==="
          find artifacts/ -maxdepth 3 -type d | sort

      - name: Create resultset
        run: |
          mkdir -p results/sets
          bundle exec serialbench resultset create weekly-benchmark results/sets/weekly-benchmark

      - name: Add all results to resultset
        run: |
          bundle exec serialbench resultset add-result results/sets/weekly-benchmark artifacts/benchmark-results-*/

      - name: Generate GitHub Pages site
        run: |
          bundle exec serialbench resultset build-site results/sets/weekly-benchmark _site

      - name: Create summary page
        run: |
          mkdir -p _site
          cat > _site/README.md << 'EOF'
          # Serialbench - Weekly Benchmark Results

          This site contains automated benchmark results for Ruby serialization libraries.

          ## Benchmarked Libraries

          - **XML**: REXML, Ox, Nokogiri, Oga, LibXML
          - **JSON**: JSON, Oj, RapidJSON, YAJL
          - **YAML**: Psych
          - **TOML**: TOML-RB, Tomlib, tomlrb

          ## Platforms Tested

          - Ubuntu Latest (Linux x86_64)
          - Ubuntu 24.04 (Linux ARM64)
          - Ubuntu 22.04 (Linux ARM64)
          - macOS 13 (Intel x86_64)
          - macOS 15 Intel (Intel x86_64)
          - macOS 14 (Apple Silicon ARM64)
          - macOS 15 (Apple Silicon ARM64)

          ## Ruby Versions

          - Ruby 3.1, 3.2, 3.3, 3.4

          ## View Results

          Open [index.html](./index.html) to view the interactive dashboard.

          ---

          *Last updated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")*
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Summary job
  summary:
    runs-on: ubuntu-latest
    needs: [setup, benchmark, deploy-pages]
    if: always()
    steps:
      - name: Generate workflow summary
        run: |
          echo "## Weekly Benchmark Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Benchmark Status**: ${{ needs.benchmark.result }}" >> $GITHUB_STEP_SUMMARY
          echo "**Deploy Status**: ${{ needs.deploy-pages.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Platforms Tested" >> $GITHUB_STEP_SUMMARY
          echo "- Ubuntu Latest (Linux x86_64)" >> $GITHUB_STEP_SUMMARY
          echo "- Ubuntu 24.04 (Linux ARM64)" >> $GITHUB_STEP_SUMMARY
          echo "- Ubuntu 22.04 (Linux ARM64)" >> $GITHUB_STEP_SUMMARY
          echo "- macOS 13 (Intel x86_64)" >> $GITHUB_STEP_SUMMARY
          echo "- macOS 15 Intel (Intel x86_64)" >> $GITHUB_STEP_SUMMARY
          echo "- macOS 14 (Apple Silicon ARM64)" >> $GITHUB_STEP_SUMMARY
          echo "- macOS 15 (Apple Silicon ARM64)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Ruby Versions" >> $GITHUB_STEP_SUMMARY
          echo "- Ruby 3.1, 3.2, 3.3, 3.4" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Serialization Libraries" >> $GITHUB_STEP_SUMMARY
          echo "- **XML**: REXML, Ox, Nokogiri, Oga, LibXML" >> $GITHUB_STEP_SUMMARY
          echo "- **JSON**: JSON, Oj, RapidJSON, YAJL" >> $GITHUB_STEP_SUMMARY
          echo "- **YAML**: Psych" >> $GITHUB_STEP_SUMMARY
          echo "- **TOML**: TOML-RB, Tomlib, tomlrb" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "### Results" >> $GITHUB_STEP_SUMMARY
            echo "📊 [View Interactive Dashboard](https://metanorma.github.io/serialbench/)" >> $GITHUB_STEP_SUMMARY
          fi
